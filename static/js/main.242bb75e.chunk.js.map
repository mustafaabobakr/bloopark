{"version":3,"sources":["logo.png","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","ev","preventDefault","emailInput","current","classList","remove","passwordInput","errorSpan","add","_ev$target","target","name","value","setState","defineProperty","handleShowPassword","showPassCurrent","state","showPass","icon","showPassIcon","faEyeSlash","faEye","handleSubmit","email","password","React","createRef","react_default","a","createElement","Fragment","className","href","rel","src","Logo","alt","title","noValidate","onSubmit","id","type","onChange","ref","htmlFor","onClick","react_fontawesome_index_es","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.242bb75e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ffe5568c.png\";","import React, { Component } from \"react\";\nimport Logo from \"./logo.png\";\n// get our fontawesome imports\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n      email:null,\n      password: null,\n      showPass: false,\n      showPassIcon: faEye,\n    };\n    // these refs to change class on submitting to be .error and .error-border\n    this.emailInput = React.createRef();\n    this.passwordInput = React.createRef();\n    this.errorSpan = React.createRef();\n  }\n\n\thandleInputChange = ev => {\n    // prevent default submitting\n    ev.preventDefault();\n    // remove errors\n    this.emailInput.current.classList.remove('error-border');\n    this.passwordInput.current.classList.remove('error-border');\n    this.errorSpan.current.classList.add('d-none');\n    const { name, value } = ev.target;\n    this.setState({\n      [name]: value\n    })\n  }\n  handleShowPassword = ev => {\n    const showPassCurrent = this.state.showPass;\n    let icon = this.state.showPassIcon;\n    showPassCurrent === false ? icon = faEyeSlash: icon=faEye;\n    this.setState({\n      showPass: !showPassCurrent,\n      showPassIcon:icon\n    })\n  }\n\thandleSubmit = ev => {\n    // prevent default submitting\n    ev.preventDefault();\n    this.emailInput.current.classList.add('error-border');\n    this.passwordInput.current.classList.add('error-border');\n    this.errorSpan.current.classList.remove('d-none');\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<header className=\"header\">\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"header-link\"\n\t\t\t\t\t\thref=\"https://mostafaabobakr7.github.io/bloopark/\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t<img src={Logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t</a>\n\t\t\t\t\t<button className=\"header-btn\" title=\"menu\">\n\t\t\t\t\t\t<span className=\"header-btn__menu\">\n\t\t\t\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</header>\n\t\t\t\t<main className=\"main\">\n        <div className=\"container\">\n\t\t\t\t\t<section className=\"gretting\">\n\t\t\t\t\t\t<h1 className=\"gretting__name\">Hello, John!</h1>\n\t\t\t\t\t\t<p className=\"gretting__text\">\n\t\t\t\t\t\t\tPlease log in with your credentials.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t<form  className=\"form\" noValidate onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<fieldset className=\"form-control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tclassName={this.state.email !== null && this.state.email !== \"\" ? \"notempty form-control__input\":\"form-control__input\"}\n\t\t\t\t\t\t\t\tvalue ={this.state.email}\n\t\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\t\tonChange ={this.handleInputChange}\n                ref={this.emailInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n                htmlFor=\"email\"\n                className=\"form-control__label\"\n                >\n\t\t\t\t\t\t\t\tEmail address\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t<fieldset className=\"form-control\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\ttype={this.state.showPass === true ? \"text\": \"password\"}\n\t\t\t\t\t\t\t\tname=\"password\"\n                className={this.state.password !== null && this.state.password !== \"\" ? \"notempty form-control__input\":\"form-control__input\"}\n\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n                ref={this.passwordInput}\n\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n                htmlFor=\"password\"\n                className=\"form-control__label\"\n                >\n\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<button\n                type=\"button\"\n                className=\"form-control__icon\"\n                onClick={this.handleShowPassword}\n              >\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={this.state.showPassIcon} />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</fieldset>\n            <span\n            className=\"error__span error d-none\"\n            ref={this.errorSpan}\n            >Please check your email address or your password</span>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tid=\"submit\"\n              className={this.state.email !== null && this.state.email !== \"\" || this.state.password !== null && this.state.password !== \"\" ? \"form-control__btn active\":\"form-control__btn\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<a href=\"/\" className=\"form-control__forget\">\n\t\t\t\t\t\t\tForgot your password?\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</form>\n          </div>\n\t\t\t\t</main>\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\t<h2 className=\"footer-head\">\n\t\t\t\t\t\t<span>Not yet a</span>\n\t\t\t\t\t\tGOLD TRADER?\n\t\t\t\t\t</h2>\n\t\t\t\t\t<p className=\"footer-bottom\">\n\t\t\t\t\t\tBy creating an account with our store, you will be able to move\n\t\t\t\t\t\tthrough the checkout process faster\n\t\t\t\t\t</p>\n\t\t\t\t</footer>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}